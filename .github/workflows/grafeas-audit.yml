name: Grafeas Audit Trail

on:
  push:
    branches: [ main ]

env:
  GRAFEAS_ADDR: grafeas.example.com:8080   # Update if your server is elsewhere
  PROJECT_ID: openai

jobs:
  bootstrap-notes:
    name: Bootstrap Grafeas Notes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install unzip (needed below)
      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      # Download & install protoc binary
      - name: Install protoc
        run: |
          PROTOC_VERSION=21.12
          curl -sSL "https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip" -o protoc.zip
          unzip protoc.zip -d protoc3
          sudo mv protoc3/bin/protoc /usr/local/bin/
          sudo mv protoc3/include/* /usr/local/include/
          rm -rf protoc.zip protoc3

      # Download & install grpcurl
      - name: Install grpcurl
        run: |
          GRPCURL_VERSION=1.8.8
          curl -sSL "https://github.com/fullstorydev/grpcurl/releases/download/v${GRPCURL_VERSION}/grpcurl_${GRPCURL_VERSION}_linux_x86_64.tar.gz" \
            | sudo tar -xz -C /usr/local/bin

      # Generate the Grafeas descriptor set
      - name: Generate Grafeas descriptor set
        run: |
          git clone https://github.com/googleapis/googleapis.git googleapis
          mkdir -p .gha
          protoc \
            -I . \
            -I googleapis \
            --include_imports \
            --include_source_info \
            --descriptor_set_out=.gha/grafeas-v1beta1.protoset \
            proto/v1beta1/*.proto

      # Create BUILD note
      - name: Create BUILD note
        run: |
          grpcurl -plaintext \
            -protoset ./.gha/grafeas-v1beta1.protoset \
            -d '{"parent":"projects/'"${PROJECT_ID}"'","noteId":"'${{ github.repository }}'-build","note":{"kind":"BUILD","build":{"builderVersion":"gha-1.0.0"}}}' \
            $GRAFEAS_ADDR \
            grafeas.v1beta1.GrafeasV1Beta1.CreateNote

      # Create DEPLOYMENT note
      - name: Create DEPLOYMENT note
        run: |
          grpcurl -plaintext \
            -protoset ./.gha/grafeas-v1beta1.protoset \
            -d '{"parent":"projects/'"${PROJECT_ID}"'","noteId":"'${{ github.repository }}'-deploy","note":{"kind":"DEPLOYMENT","deployable":{"resourceUri":["https://github.com/'"${{ github.repository }}"']}}}' \
            $GRAFEAS_ADDR \
            grafeas.v1beta1.GrafeasV1Beta1.CreateNote

      # Create VULNERABILITY note
      - name: Create VULNERABILITY note
        run: |
          grpcurl -plaintext \
            -protoset ./.gha/grafeas-v1beta1.protoset \
            -d '{"parent":"projects/'"${PROJECT_ID}"'","noteId":"'${{ github.repository }}'-vuln","note":{"kind":"VULNERABILITY","shortDescription":"CI-driven vuln scan for '"${{ github.repository }}"'","vulnerability":{"severity":"UNSPECIFIED"}}}' \
            $GRAFEAS_ADDR \
            grafeas.v1beta1.GrafeasV1Beta1.CreateNote

  build-and-scan:
    name: Build & Scan
    runs-on: ubuntu-latest
    needs: bootstrap-notes
    services:
      docker:
        image: docker:20.10.16
        options: --privileged
        ports:
          - 2375:2375
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t "${{ github.repository }}:latest" .

      - name: Emit BUILD occurrence
        run: |
          grpcurl -plaintext \
            -protoset ./.gha/grafeas-v1beta1.protoset \
            -d '{"parent":"projects/'"${PROJECT_ID}"'","occurrence":{"noteName":"projects/'"${PROJECT_ID}"'/notes/'"${{ github.repository }}'-build","resourceUri":"docker://'${{ github.repository }}':latest","build":{"provenance":{"id":"build-'${{ github.run_id }}'","projectId":"'"${PROJECT_ID}"'","commands":[{"name":"docker build","args":["-t","'"${{ github.repository }}':latest"]}],"createTime":"'"$(date -u +"%Y-%m-%dT%H:%M:%SZ")"'"}}}}' \
            $GRAFEAS_ADDR \
            grafeas.v1beta1.GrafeasV1Beta1.CreateOccurrence

      - name: Run container-scanning plugin
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e GRAFEAS_ADDR=$GRAFEAS_ADDR \
            gcr.io/grafeas/container-scanning:latest \
              image "${{ github.repository }}:latest" --project="$PROJECT_ID"

  deploy:
    name: Deploy & Record
    runs-on: ubuntu-latest
    needs: build-and-scan
    steps:
      - name: Emit DEPLOYMENT occurrence
        run: |
          grpcurl -plaintext \
            -protoset ./.gha/grafeas-v1beta1.protoset \
            -d '{"parent":"projects/'"${PROJECT_ID}"'","occurrence":{"noteName":"projects/'"${PROJECT_ID}"'/notes/'"${{ github.repository }}'-deploy","resourceUri":"docker://'${{ github.repository }}':latest","deployment":{"deployment":{"userEmail":"'"${{ github.actor }}"'@users.noreply.github.com","deployTime":"'"$(date -u +"%Y-%m-%dT%H:%M:%SZ")"'"}}}}' \
            $GRAFEAS_ADDR \
            grafeas.v1beta1.GrafeasV1Beta1.CreateOccurrence
